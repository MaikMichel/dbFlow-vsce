{
  "dbflux-constraints-check_constraints.sql" : {
    "body": [
      "alter table ${1:source_table} add (",
      "  constraint ${TM_FILENAME_BASE}",
      "  check (${2:source_column} ${3:condition})",
      "  enable validate",
      ");$0"
    ]
  },
  "dbflux-constraints-checks.sql" : {
    "body": [
      "alter table ${1:source_table} add (",
      "  constraint ${TM_FILENAME_BASE}",
      "  check (${2:source_column} ${3:condition})",
      "  enable validate",
      ");$0"
    ]
  },
  "dbflux-constraints-foreign_keys.sql" : {
    "body": [
      "alter table ${1:source_table} add (",
      "  constraint ${TM_FILENAME_BASE}",
      "  foreign key (${2:source_prefix}_${3:target_column})",
      "  references ${4:target_table} (${3:target_column})",
      "  enable validate",
      ");$0"
    ]
  },
  "dbflux-constraints-foreigns.sql" : {
    "body": [
      "alter table ${1:source_table} add (",
      "  constraint ${TM_FILENAME_BASE}",
      "  foreign key (${2:source_prefix}_${3:target_column})",
      "  references ${4:target_table} (${3:target_column})",
      "  enable validate",
      ");$0"
    ]
  },
  "dbflux-constraints-primary_keys.sql" : {
    "body": [
      "-- don't forget to create index: indexs/primary_key/${TM_FILENAME_BASE}.sql based on that pk",
      "alter table ${1:source_table} add (",
			"  constraint ${TM_FILENAME_BASE}",
			"  primary key (${2:source_column})",
			"  using index ${TM_FILENAME_BASE}",
			"  enable validate",
			");$0"
    ]
  },
  "dbflux-constraints-primaries.sql" : {
    "body": [
      "-- don't forget to create index: indexs/primary_key/${TM_FILENAME_BASE}.sql based on that pk",
      "alter table ${1:source_table} add (",
			"  constraint ${TM_FILENAME_BASE}",
			"  primary key (${2:source_column})",
			"  using index ${TM_FILENAME_BASE}",
			"  enable validate",
			");$0"
    ]
  },
  "dbflux-constraints-unique_keys.sql" : {
    "body": [
      "alter table ${1:source_table} add (",
      "  constraint ${TM_FILENAME_BASE}",
      "  unique(${2:source_columns})",
      "  enable validate",
      ");$0"
    ]
  },
  "dbflux-constraints-uniques.sql" : {
    "body": [
      "alter table ${1:source_table} add (",
      "  constraint ${TM_FILENAME_BASE}",
      "  unique(${2:source_columns})",
      "  enable validate",
      ");$0"
    ]
  },
  "dbflux-indexes-defaults.sql" : {
    "body": [
      "create index ${TM_FILENAME_BASE} on ${1:source_table} (",
      "  ${2:source_columns}",
      ") tablespace ${3:tablespace_name} logging;",
      "$0"
    ]
  },
  "dbflux-indexes-primary_keys.sql" : {
    "body": [
      "create unique index ${TM_FILENAME_BASE} on ${1:source_table} (",
      "  ${2:source_column}",
      ") tablespace ${3:tablespace_name} logging;",
      "$0"
    ]
  },
  "dbflux-indexes-primaries.sql" : {
    "body": [
      "create unique index ${TM_FILENAME_BASE} on ${1:source_table} (",
      "  ${2:source_column}",
      ") tablespace ${3:tablespace_name} logging;",
      "$0"
    ]
  },
  "dbflux-indexes-unique_keys.sql" : {
    "body": [
      "create unique index ${TM_FILENAME_BASE} on ${1:source_table} (",
      "  ${2:source_column}",
      ") tablespace ${3:tablespace_name} logging;",
      "$0"
    ]
  },
  "dbflux-indexes-uniques.sql" : {
    "body": [
      "create unique index ${TM_FILENAME_BASE} on ${1:source_table} (",
      "  ${2:source_column}",
      ") tablespace ${3:tablespace_name} logging;",
      "$0"
    ]
  },
  "dbflux-tables.sql" : {
    "body": [
      "create table ${TM_FILENAME_BASE} (",
			"  ${2:prefix}_id               number                    not null,",
			"  ${2:prefix}_",
			"  ... ",
			"  ${2:prefix}_created_at       date                      not null,",
			"  ${2:prefix}_created_by       varchar2(250 char)        not null,",
			"  ${2:prefix}_modified_at      date                      not null,",
			"  ${2:prefix}_modified_by      varchar2(250 char)        not null",
			");",
			"",
			"comment on table ${TM_FILENAME_BASE} is 'Content of table';",
			"comment on column ${TM_FILENAME_BASE}.${2:prefix}_id is 'PrimaryKey for table ${TM_FILENAME_BASE}';"
    ]
  },
  "dbflux-views.sql" : {
    "body" : [
      "create or replace view ${TM_FILENAME_BASE} as ",
      "select *",
      "  from ${1:schema}.${2:table}",
      "/"
    ]
  },
  "dbflux-sources-packages.pks" : {
    "body": [
      "create or replace package ${TM_FILENAME_BASE} is",
      "  ",
      "end;",
      "/"
    ]
  },
  "dbflux-sources-packages.pkb" : {
    "body": [
      "create or replace package body ${TM_FILENAME_BASE} is",
      "  ",
      "end;",
      "/"
    ]
  },
  "dbflux-sources-triggers.sql" : {
    "body": [
      "create or replace trigger ${TM_FILENAME_BASE}",
      "    before insert or update or delete",
      "    on ${1:table}",
      "    for each row",
      "begin",
      "  null;",
      "end ${TM_FILENAME_BASE};",
      "/"
    ]
  },
  "dbflux-sources-functions.sql" : {
    "body": [
      "create or replace function ${TM_FILENAME_BASE} (${2:param_name} ${3:param_type}) return ${1:return_type}",
      "begin",
      "  null;",
      "end ${TM_FILENAME_BASE};",
      "/"
    ]
  },
  "dbflux-sources-procedures.sql" : {
    "body": [
      "create or replace procedure ${TM_FILENAME_BASE} (${1:param_name} ${2:param_type})",
      "begin",
      "  null;",
      "end ${TM_FILENAME_BASE};",
      "/"
    ]
  },"dbflux-tables-constraint-pk": {
		"scope": "plsql,sql",
		"prefix": "dbf.tbl.con.pk",
		"body": [
			"-- File: constraints/primaries/${TM_FILENAME_BASE}_${1:source_column}_pk.sql",
			"alter table ${TM_FILENAME_BASE} add (",
			"  constraint ${1:source_column}_pk",
			"  primary key (${1:source_column)",
			"  using index ${TM_FILENAME_BASE}_${1:source_column}_pk",
			"  enable validate",
			");$0"
		],
		"description": "Add a primary key constraint from tablescript to split later"
	},
	"dbflux-tables-constraint-fk": {
		"scope": "plsql,sql",
		"prefix": "dbf.tbl.con.fk",
		"body": [
		"-- File: constraints/foreigns/${TM_FILENAME_BASE}_${1:source_table_prefix}_${2:target_table_column}.sql",
		"alter table ${TM_FILENAME_BASE} add (",
		"  constraint ${TM_FILENAME_BASE}_${1:source_table_prefix}_${2:target_table_column}_fk",
		"  foreign key (${1:source_table_prefix}_${2:target_table_column})",
		"  references ${3:target_table} (${2:target_table_column})",
		"  enable validate",
		");$0"
		],
		"description": "Add a foreign key constraint from tablescript to split later"
	},
	"dbflux-tables-constraint-uk": {
		"scope": "plsql,sql",
		"prefix": "dbf.tbl.con.uk",
		"body": [
		"-- File: constraints/uniques/${TM_FILENAME_BASE}_${1:source_column}_uk.sql",
		"alter table ${TM_FILENAME_BASE} add (",
		"  constraint ${TM_FILENAME_BASE}_${1:source_column}_uk",
		"  unique (${1:source_column})",
		"  enable validate",
		");$0"
		],
		"description": "Add a unique key constraint from tablescript to split later"
	},
	"dbflux-tables-constraint-cc": {
		"scope": "plsql,sql",
		"prefix": "dbf.tbl.con.cc",
		"body": [
		"-- File: constraints/checks/${TM_FILENAME_BASE}_${1:source_columns}_cc.sql",
		"alter table ${TM_FILENAME_BASE} add (",
		"  constraint ${TM_FILENAME_BASE}_${1:source_columns}_cc",
		"  check (${1:source_columns} ${2:condition})",
		"  enable validate",
		");$0"
		],
		"description": "Add a check constraint from tablescript to split later"
	},
	"dbflux-tables-index-pk": {
		"scope": "plsql,sql",
		"prefix": "dbf.tbl.idx.pk",
		"body": [
		"-- File: indexes/primaries/${TM_FILENAME_BASE}_${1:source_column}_pk.sql",
		"create unique index ${TM_FILENAME_BASE}_${1:source_column}_pk on ${TM_FILENAME_BASE} ",
		"  (${1:source_column})",
		"  logging",
		";$0"
		],
		"description": "Add a unique index for pk purposes from tablescript to split later"
	},
	"dbflux-tables-index-uk": {
		"scope": "plsql,sql",
		"prefix": "dbf.tbl.idx.uk",
		"body": [
		"-- File: indexes/uniques/${TM_FILENAME_BASE}_${1:source_column}_uk.sql",
		"create unique index ${TM_FILENAME_BASE}_${1:source_column}_uk on ${TM_FILENAME_BASE} ",
		"  (${1:source_column})",
		"  logging",
		";$0"
		],
		"description": "Add a unique index from tablescript to split later"
	},
	"dbflux-tables-index.df": {
		"scope": "plsql,sql",
		"prefix": "dbf.tbl.idx.df",
		"body": [
		"-- File: indexes/defaults/${TM_FILENAME_BASE}_${1:source_column}_df.sql",
		"create index ${TM_FILENAME_BASE}_${1:source_column}_df on ${TM_FILENAME_BASE} ",
		"  (${1:source_column})",
		"  logging",
		";$0"
		],
		"description": "Add a non unique index from tablescript to split later"
	}
}